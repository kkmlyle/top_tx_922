// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_tx_adding_pilot_Pipeline_output_arrangement (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp2_re399_din,
        temp2_re399_full_n,
        temp2_re399_write,
        temp2_im400_din,
        temp2_im400_full_n,
        temp2_im400_write,
        pilot_sym_M_real_V_address0,
        pilot_sym_M_real_V_ce0,
        pilot_sym_M_real_V_q0,
        pilot_sym_M_imag_V_address0,
        pilot_sym_M_imag_V_ce0,
        pilot_sym_M_imag_V_q0,
        data_symb1_M_real_V_address0,
        data_symb1_M_real_V_ce0,
        data_symb1_M_real_V_q0,
        data_symb1_M_imag_V_address0,
        data_symb1_M_imag_V_ce0,
        data_symb1_M_imag_V_q0,
        data_symb2_M_real_V_address0,
        data_symb2_M_real_V_ce0,
        data_symb2_M_real_V_q0,
        data_symb2_M_imag_V_address0,
        data_symb2_M_imag_V_ce0,
        data_symb2_M_imag_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] temp2_re399_din;
input   temp2_re399_full_n;
output   temp2_re399_write;
output  [15:0] temp2_im400_din;
input   temp2_im400_full_n;
output   temp2_im400_write;
output  [9:0] pilot_sym_M_real_V_address0;
output   pilot_sym_M_real_V_ce0;
input  [14:0] pilot_sym_M_real_V_q0;
output  [9:0] pilot_sym_M_imag_V_address0;
output   pilot_sym_M_imag_V_ce0;
input  [14:0] pilot_sym_M_imag_V_q0;
output  [9:0] data_symb1_M_real_V_address0;
output   data_symb1_M_real_V_ce0;
input  [15:0] data_symb1_M_real_V_q0;
output  [9:0] data_symb1_M_imag_V_address0;
output   data_symb1_M_imag_V_ce0;
input  [15:0] data_symb1_M_imag_V_q0;
output  [9:0] data_symb2_M_real_V_address0;
output   data_symb2_M_real_V_ce0;
input  [15:0] data_symb2_M_real_V_q0;
output  [9:0] data_symb2_M_imag_V_address0;
output   data_symb2_M_imag_V_ce0;
input  [15:0] data_symb2_M_imag_V_q0;

reg ap_idle;
reg[15:0] temp2_re399_din;
reg temp2_re399_write;
reg[15:0] temp2_im400_din;
reg temp2_im400_write;
reg pilot_sym_M_real_V_ce0;
reg pilot_sym_M_imag_V_ce0;
reg data_symb1_M_real_V_ce0;
reg data_symb1_M_imag_V_ce0;
reg data_symb2_M_real_V_ce0;
reg data_symb2_M_imag_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln135_reg_247;
reg   [0:0] tmp_17_reg_251;
reg    ap_predicate_op41_write_state2;
reg    ap_predicate_op43_write_state2;
reg    ap_predicate_op46_write_state2;
reg    ap_predicate_op48_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln133_fu_168_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    temp2_re399_blk_n;
wire    ap_block_pp0_stage0;
reg    temp2_im400_blk_n;
wire   [0:0] icmp_ln135_fu_200_p2;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln142_fu_214_p1;
wire   [63:0] i_13_cast14_fu_180_p1;
reg   [11:0] i_fu_60;
wire   [11:0] add_ln133_fu_174_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_i_10;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln137_fu_227_p1;
wire   [15:0] zext_ln138_fu_232_p1;
wire   [1:0] tmp_fu_190_p4;
wire   [9:0] empty_63_fu_186_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_193;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_tx_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln133_fu_168_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_60 <= add_ln133_fu_174_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_60 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_168_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln135_reg_247 <= icmp_ln135_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_168_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln135_fu_200_p2 == 1'd0))) begin
        tmp_17_reg_251 <= ap_sig_allocacmp_i_10[32'd11];
    end
end

always @ (*) begin
    if (((icmp_ln133_fu_168_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_10 = 12'd0;
    end else begin
        ap_sig_allocacmp_i_10 = i_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_symb1_M_imag_V_ce0 = 1'b1;
    end else begin
        data_symb1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_symb1_M_real_V_ce0 = 1'b1;
    end else begin
        data_symb1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_symb2_M_imag_V_ce0 = 1'b1;
    end else begin
        data_symb2_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_symb2_M_real_V_ce0 = 1'b1;
    end else begin
        data_symb2_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pilot_sym_M_imag_V_ce0 = 1'b1;
    end else begin
        pilot_sym_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pilot_sym_M_real_V_ce0 = 1'b1;
    end else begin
        pilot_sym_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln135_reg_247 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op43_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        temp2_im400_blk_n = temp2_im400_full_n;
    end else begin
        temp2_im400_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((icmp_ln135_reg_247 == 1'd1)) begin
            temp2_im400_din = zext_ln138_fu_232_p1;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            temp2_im400_din = data_symb2_M_imag_V_q0;
        end else if ((ap_predicate_op43_write_state2 == 1'b1)) begin
            temp2_im400_din = data_symb1_M_imag_V_q0;
        end else begin
            temp2_im400_din = 'bx;
        end
    end else begin
        temp2_im400_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_247 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op43_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        temp2_im400_write = 1'b1;
    end else begin
        temp2_im400_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln135_reg_247 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op46_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        temp2_re399_blk_n = temp2_re399_full_n;
    end else begin
        temp2_re399_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((icmp_ln135_reg_247 == 1'd1)) begin
            temp2_re399_din = zext_ln137_fu_227_p1;
        end else if ((ap_predicate_op46_write_state2 == 1'b1)) begin
            temp2_re399_din = data_symb2_M_real_V_q0;
        end else if ((ap_predicate_op41_write_state2 == 1'b1)) begin
            temp2_re399_din = data_symb1_M_real_V_q0;
        end else begin
            temp2_re399_din = 'bx;
        end
    end else begin
        temp2_re399_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_247 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op46_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        temp2_re399_write = 1'b1;
    end else begin
        temp2_re399_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln133_fu_174_p2 = (ap_sig_allocacmp_i_10 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln135_reg_247 == 1'd1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((ap_predicate_op46_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op43_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((temp2_im400_full_n == 1'b0) & (icmp_ln135_reg_247 == 1'd1)) | ((ap_predicate_op41_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln135_reg_247 == 1'd1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((ap_predicate_op46_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op43_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((temp2_im400_full_n == 1'b0) & (icmp_ln135_reg_247 == 1'd1)) | ((ap_predicate_op41_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln135_reg_247 == 1'd1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((ap_predicate_op46_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op43_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((temp2_im400_full_n == 1'b0) & (icmp_ln135_reg_247 == 1'd1)) | ((ap_predicate_op41_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((icmp_ln135_reg_247 == 1'd1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((ap_predicate_op46_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0)) | ((ap_predicate_op43_write_state2 == 1'b1) & (temp2_im400_full_n == 1'b0)) | ((temp2_im400_full_n == 1'b0) & (icmp_ln135_reg_247 == 1'd1)) | ((ap_predicate_op41_write_state2 == 1'b1) & (temp2_re399_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_193 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op41_write_state2 = ((tmp_17_reg_251 == 1'd0) & (icmp_ln135_reg_247 == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_write_state2 = ((tmp_17_reg_251 == 1'd0) & (icmp_ln135_reg_247 == 1'd0));
end

always @ (*) begin
    ap_predicate_op46_write_state2 = ((tmp_17_reg_251 == 1'd1) & (icmp_ln135_reg_247 == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((tmp_17_reg_251 == 1'd1) & (icmp_ln135_reg_247 == 1'd0));
end

assign data_symb1_M_imag_V_address0 = zext_ln142_fu_214_p1;

assign data_symb1_M_real_V_address0 = zext_ln142_fu_214_p1;

assign data_symb2_M_imag_V_address0 = zext_ln142_fu_214_p1;

assign data_symb2_M_real_V_address0 = zext_ln142_fu_214_p1;

assign empty_63_fu_186_p1 = ap_sig_allocacmp_i_10[9:0];

assign i_13_cast14_fu_180_p1 = ap_sig_allocacmp_i_10;

assign icmp_ln133_fu_168_p2 = ((ap_sig_allocacmp_i_10 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_200_p2 = ((tmp_fu_190_p4 == 2'd0) ? 1'b1 : 1'b0);

assign pilot_sym_M_imag_V_address0 = i_13_cast14_fu_180_p1;

assign pilot_sym_M_real_V_address0 = i_13_cast14_fu_180_p1;

assign tmp_fu_190_p4 = {{ap_sig_allocacmp_i_10[11:10]}};

assign zext_ln137_fu_227_p1 = pilot_sym_M_real_V_q0;

assign zext_ln138_fu_232_p1 = pilot_sym_M_imag_V_q0;

assign zext_ln142_fu_214_p1 = empty_63_fu_186_p1;

endmodule //top_tx_adding_pilot_Pipeline_output_arrangement
