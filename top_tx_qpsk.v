// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_tx_qpsk (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp1_re397_din,
        temp1_re397_full_n,
        temp1_re397_write,
        temp1_im398_din,
        temp1_im398_full_n,
        temp1_im398_write,
        ap_ce,
        input1,
        input2,
        temp1_re397_blk_n,
        temp1_im398_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] temp1_re397_din;
input   temp1_re397_full_n;
output   temp1_re397_write;
output  [15:0] temp1_im398_din;
input   temp1_im398_full_n;
output   temp1_im398_write;
input   ap_ce;
input  [0:0] input1;
input  [0:0] input2;
output   temp1_re397_blk_n;
output   temp1_im398_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg temp1_re397_write;
reg temp1_im398_write;
reg temp1_re397_blk_n;
reg temp1_im398_blk_n;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
reg    ap_block_state19_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] select_ln18_fu_102_p3;
reg   [63:0] select_ln18_reg_606;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] select_ln19_fu_110_p3;
reg   [63:0] select_ln19_reg_611;
wire   [63:0] grp_fu_92_p2;
reg   [63:0] d_reg_616;
wire   [63:0] grp_fu_97_p2;
reg   [63:0] d_1_reg_621;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] ireg_fu_118_p1;
wire   [10:0] exp_tmp_fu_133_p4;
wire   [51:0] trunc_ln554_fu_147_p1;
wire   [52:0] p_Result_1_fu_151_p3;
wire   [53:0] zext_ln558_fu_159_p1;
wire   [0:0] p_Result_s_fu_125_p3;
wire   [53:0] man_V_1_fu_163_p2;
wire   [62:0] trunc_ln544_fu_121_p1;
wire   [11:0] zext_ln455_fu_143_p1;
wire   [11:0] F2_fu_183_p2;
wire   [0:0] icmp_ln570_fu_189_p2;
wire   [11:0] add_ln570_fu_195_p2;
wire   [11:0] sub_ln570_fu_201_p2;
wire  signed [11:0] sh_amt_fu_207_p3;
wire   [53:0] man_V_2_fu_169_p3;
wire  signed [31:0] sext_ln570_fu_215_p1;
wire   [53:0] zext_ln575_fu_235_p1;
wire   [53:0] ashr_ln575_fu_239_p2;
wire   [0:0] tmp_fu_249_p3;
wire   [0:0] icmp_ln574_fu_229_p2;
wire   [15:0] trunc_ln575_fu_245_p1;
wire   [15:0] select_ln577_fu_257_p3;
wire   [7:0] tmp_5_fu_273_p4;
wire   [15:0] trunc_ln572_fu_225_p1;
wire   [15:0] sext_ln570cast_fu_289_p1;
wire   [0:0] icmp_ln592_fu_283_p2;
wire   [15:0] shl_ln593_fu_293_p2;
wire   [0:0] icmp_ln560_fu_177_p2;
wire   [0:0] icmp_ln571_fu_219_p2;
wire   [0:0] xor_ln560_fu_307_p2;
wire   [0:0] and_ln571_fu_313_p2;
wire   [15:0] select_ln592_fu_299_p3;
wire   [0:0] or_ln571_fu_327_p2;
wire   [0:0] xor_ln571_fu_333_p2;
wire   [0:0] and_ln570_fu_339_p2;
wire   [15:0] select_ln574_fu_265_p3;
wire   [15:0] select_ln571_fu_319_p3;
wire   [15:0] select_ln570_fu_345_p3;
wire   [63:0] ireg_1_fu_362_p1;
wire   [10:0] exp_tmp_1_fu_377_p4;
wire   [51:0] trunc_ln554_1_fu_391_p1;
wire   [52:0] p_Result_3_fu_395_p3;
wire   [53:0] zext_ln558_1_fu_403_p1;
wire   [0:0] p_Result_2_fu_369_p3;
wire   [53:0] man_V_4_fu_407_p2;
wire   [62:0] trunc_ln544_1_fu_365_p1;
wire   [11:0] zext_ln455_1_fu_387_p1;
wire   [11:0] F2_1_fu_427_p2;
wire   [0:0] icmp_ln570_1_fu_433_p2;
wire   [11:0] add_ln570_1_fu_439_p2;
wire   [11:0] sub_ln570_1_fu_445_p2;
wire  signed [11:0] sh_amt_1_fu_451_p3;
wire   [53:0] man_V_5_fu_413_p3;
wire  signed [31:0] sext_ln570_1_fu_459_p1;
wire   [53:0] zext_ln575_1_fu_479_p1;
wire   [53:0] ashr_ln575_1_fu_483_p2;
wire   [0:0] tmp_7_fu_493_p3;
wire   [0:0] icmp_ln574_1_fu_473_p2;
wire   [15:0] trunc_ln575_1_fu_489_p1;
wire   [15:0] select_ln577_1_fu_501_p3;
wire   [7:0] tmp_8_fu_517_p4;
wire   [15:0] trunc_ln572_1_fu_469_p1;
wire   [15:0] sext_ln570_1cast_fu_533_p1;
wire   [0:0] icmp_ln592_1_fu_527_p2;
wire   [15:0] shl_ln593_1_fu_537_p2;
wire   [0:0] icmp_ln560_1_fu_421_p2;
wire   [0:0] icmp_ln571_1_fu_463_p2;
wire   [0:0] xor_ln560_1_fu_551_p2;
wire   [0:0] and_ln571_1_fu_557_p2;
wire   [15:0] select_ln592_1_fu_543_p3;
wire   [0:0] or_ln571_1_fu_571_p2;
wire   [0:0] xor_ln571_1_fu_577_p2;
wire   [0:0] and_ln570_1_fu_583_p2;
wire   [15:0] select_ln574_1_fu_509_p3;
wire   [15:0] select_ln571_1_fu_563_p3;
wire   [15:0] select_ln570_2_fu_589_p3;
reg    grp_fu_92_ce;
reg    grp_fu_97_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to17;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

top_tx_ddiv_64ns_64ns_64_17_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_17_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln18_reg_606),
    .din1(64'd4609047870845172685),
    .ce(grp_fu_92_ce),
    .dout(grp_fu_92_p2)
);

top_tx_ddiv_64ns_64ns_64_17_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_17_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln19_reg_611),
    .din1(64'd4609047870845172685),
    .ce(grp_fu_97_ce),
    .dout(grp_fu_97_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_1_reg_621 <= grp_fu_97_p2;
        d_reg_616 <= grp_fu_92_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_reg_606[63] <= select_ln18_fu_102_p3[63];
        select_ln19_reg_611[63] <= select_ln19_fu_110_p3[63];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to17 = 1'b1;
    end else begin
        ap_idle_pp0_0to17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to17 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_92_ce = 1'b1;
    end else begin
        grp_fu_92_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_97_ce = 1'b1;
    end else begin
        grp_fu_97_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        temp1_im398_blk_n = temp1_im398_full_n;
    end else begin
        temp1_im398_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp1_im398_write = 1'b1;
    end else begin
        temp1_im398_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        temp1_re397_blk_n = temp1_re397_full_n;
    end else begin
        temp1_re397_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp1_re397_write = 1'b1;
    end else begin
        temp1_re397_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_427_p2 = (12'd1075 - zext_ln455_1_fu_387_p1);

assign F2_fu_183_p2 = (12'd1075 - zext_ln455_fu_143_p1);

assign add_ln570_1_fu_439_p2 = ($signed(F2_1_fu_427_p2) + $signed(12'd4082));

assign add_ln570_fu_195_p2 = ($signed(F2_fu_183_p2) + $signed(12'd4082));

assign and_ln570_1_fu_583_p2 = (xor_ln571_1_fu_577_p2 & icmp_ln570_1_fu_433_p2);

assign and_ln570_fu_339_p2 = (xor_ln571_fu_333_p2 & icmp_ln570_fu_189_p2);

assign and_ln571_1_fu_557_p2 = (xor_ln560_1_fu_551_p2 & icmp_ln571_1_fu_463_p2);

assign and_ln571_fu_313_p2 = (xor_ln560_fu_307_p2 & icmp_ln571_fu_219_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & ((temp1_im398_full_n == 1'b0) | (temp1_re397_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & ((temp1_im398_full_n == 1'b0) | (temp1_re397_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter18 == 1'b1) & ((temp1_im398_full_n == 1'b0) | (temp1_re397_full_n == 1'b0))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18 = ((temp1_im398_full_n == 1'b0) | (temp1_re397_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ashr_ln575_1_fu_483_p2 = $signed(man_V_5_fu_413_p3) >>> zext_ln575_1_fu_479_p1;

assign ashr_ln575_fu_239_p2 = $signed(man_V_2_fu_169_p3) >>> zext_ln575_fu_235_p1;

assign exp_tmp_1_fu_377_p4 = {{ireg_1_fu_362_p1[62:52]}};

assign exp_tmp_fu_133_p4 = {{ireg_fu_118_p1[62:52]}};

assign icmp_ln560_1_fu_421_p2 = ((trunc_ln544_1_fu_365_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_177_p2 = ((trunc_ln544_fu_121_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_433_p2 = (($signed(F2_1_fu_427_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_189_p2 = (($signed(F2_fu_183_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_463_p2 = ((F2_1_fu_427_p2 == 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_219_p2 = ((F2_fu_183_p2 == 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_473_p2 = ((sh_amt_1_fu_451_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_229_p2 = ((sh_amt_fu_207_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_527_p2 = ((tmp_8_fu_517_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_283_p2 = ((tmp_5_fu_273_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_1_fu_362_p1 = d_1_reg_621;

assign ireg_fu_118_p1 = d_reg_616;

assign man_V_1_fu_163_p2 = (54'd0 - zext_ln558_fu_159_p1);

assign man_V_2_fu_169_p3 = ((p_Result_s_fu_125_p3[0:0] == 1'b1) ? man_V_1_fu_163_p2 : zext_ln558_fu_159_p1);

assign man_V_4_fu_407_p2 = (54'd0 - zext_ln558_1_fu_403_p1);

assign man_V_5_fu_413_p3 = ((p_Result_2_fu_369_p3[0:0] == 1'b1) ? man_V_4_fu_407_p2 : zext_ln558_1_fu_403_p1);

assign or_ln571_1_fu_571_p2 = (icmp_ln571_1_fu_463_p2 | icmp_ln560_1_fu_421_p2);

assign or_ln571_fu_327_p2 = (icmp_ln571_fu_219_p2 | icmp_ln560_fu_177_p2);

assign p_Result_1_fu_151_p3 = {{1'd1}, {trunc_ln554_fu_147_p1}};

assign p_Result_2_fu_369_p3 = ireg_1_fu_362_p1[32'd63];

assign p_Result_3_fu_395_p3 = {{1'd1}, {trunc_ln554_1_fu_391_p1}};

assign p_Result_s_fu_125_p3 = ireg_fu_118_p1[32'd63];

assign select_ln18_fu_102_p3 = ((input1[0:0] == 1'b1) ? 64'd4607182418800017408 : 64'd13830554455654793216);

assign select_ln19_fu_110_p3 = ((input2[0:0] == 1'b1) ? 64'd4607182418800017408 : 64'd13830554455654793216);

assign select_ln570_2_fu_589_p3 = ((and_ln570_1_fu_583_p2[0:0] == 1'b1) ? select_ln574_1_fu_509_p3 : select_ln571_1_fu_563_p3);

assign select_ln570_fu_345_p3 = ((and_ln570_fu_339_p2[0:0] == 1'b1) ? select_ln574_fu_265_p3 : select_ln571_fu_319_p3);

assign select_ln571_1_fu_563_p3 = ((and_ln571_1_fu_557_p2[0:0] == 1'b1) ? trunc_ln572_1_fu_469_p1 : select_ln592_1_fu_543_p3);

assign select_ln571_fu_319_p3 = ((and_ln571_fu_313_p2[0:0] == 1'b1) ? trunc_ln572_fu_225_p1 : select_ln592_fu_299_p3);

assign select_ln574_1_fu_509_p3 = ((icmp_ln574_1_fu_473_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_489_p1 : select_ln577_1_fu_501_p3);

assign select_ln574_fu_265_p3 = ((icmp_ln574_fu_229_p2[0:0] == 1'b1) ? trunc_ln575_fu_245_p1 : select_ln577_fu_257_p3);

assign select_ln577_1_fu_501_p3 = ((tmp_7_fu_493_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln577_fu_257_p3 = ((tmp_fu_249_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln592_1_fu_543_p3 = ((icmp_ln592_1_fu_527_p2[0:0] == 1'b1) ? shl_ln593_1_fu_537_p2 : 16'd0);

assign select_ln592_fu_299_p3 = ((icmp_ln592_fu_283_p2[0:0] == 1'b1) ? shl_ln593_fu_293_p2 : 16'd0);

assign sext_ln570_1_fu_459_p1 = sh_amt_1_fu_451_p3;

assign sext_ln570_1cast_fu_533_p1 = sext_ln570_1_fu_459_p1[15:0];

assign sext_ln570_fu_215_p1 = sh_amt_fu_207_p3;

assign sext_ln570cast_fu_289_p1 = sext_ln570_fu_215_p1[15:0];

assign sh_amt_1_fu_451_p3 = ((icmp_ln570_1_fu_433_p2[0:0] == 1'b1) ? add_ln570_1_fu_439_p2 : sub_ln570_1_fu_445_p2);

assign sh_amt_fu_207_p3 = ((icmp_ln570_fu_189_p2[0:0] == 1'b1) ? add_ln570_fu_195_p2 : sub_ln570_fu_201_p2);

assign shl_ln593_1_fu_537_p2 = trunc_ln572_1_fu_469_p1 << sext_ln570_1cast_fu_533_p1;

assign shl_ln593_fu_293_p2 = trunc_ln572_fu_225_p1 << sext_ln570cast_fu_289_p1;

assign sub_ln570_1_fu_445_p2 = (12'd14 - F2_1_fu_427_p2);

assign sub_ln570_fu_201_p2 = (12'd14 - F2_fu_183_p2);

assign temp1_im398_din = ((icmp_ln560_1_fu_421_p2[0:0] == 1'b1) ? 16'd0 : select_ln570_2_fu_589_p3);

assign temp1_re397_din = ((icmp_ln560_fu_177_p2[0:0] == 1'b1) ? 16'd0 : select_ln570_fu_345_p3);

assign tmp_5_fu_273_p4 = {{sh_amt_fu_207_p3[11:4]}};

assign tmp_7_fu_493_p3 = ireg_1_fu_362_p1[32'd63];

assign tmp_8_fu_517_p4 = {{sh_amt_1_fu_451_p3[11:4]}};

assign tmp_fu_249_p3 = ireg_fu_118_p1[32'd63];

assign trunc_ln544_1_fu_365_p1 = ireg_1_fu_362_p1[62:0];

assign trunc_ln544_fu_121_p1 = ireg_fu_118_p1[62:0];

assign trunc_ln554_1_fu_391_p1 = ireg_1_fu_362_p1[51:0];

assign trunc_ln554_fu_147_p1 = ireg_fu_118_p1[51:0];

assign trunc_ln572_1_fu_469_p1 = man_V_5_fu_413_p3[15:0];

assign trunc_ln572_fu_225_p1 = man_V_2_fu_169_p3[15:0];

assign trunc_ln575_1_fu_489_p1 = ashr_ln575_1_fu_483_p2[15:0];

assign trunc_ln575_fu_245_p1 = ashr_ln575_fu_239_p2[15:0];

assign xor_ln560_1_fu_551_p2 = (icmp_ln560_1_fu_421_p2 ^ 1'd1);

assign xor_ln560_fu_307_p2 = (icmp_ln560_fu_177_p2 ^ 1'd1);

assign xor_ln571_1_fu_577_p2 = (or_ln571_1_fu_571_p2 ^ 1'd1);

assign xor_ln571_fu_333_p2 = (or_ln571_fu_327_p2 ^ 1'd1);

assign zext_ln455_1_fu_387_p1 = exp_tmp_1_fu_377_p4;

assign zext_ln455_fu_143_p1 = exp_tmp_fu_133_p4;

assign zext_ln558_1_fu_403_p1 = p_Result_3_fu_395_p3;

assign zext_ln558_fu_159_p1 = p_Result_1_fu_151_p3;

assign zext_ln575_1_fu_479_p1 = $unsigned(sext_ln570_1_fu_459_p1);

assign zext_ln575_fu_235_p1 = $unsigned(sext_ln570_fu_215_p1);

always @ (posedge ap_clk) begin
    select_ln18_reg_606[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
    select_ln19_reg_611[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
end

endmodule //top_tx_qpsk
